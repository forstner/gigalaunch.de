===== TEST DOCUMENTATION =====

... is a usefull beast that enshures quality. whenever you encounter an error-case, write it down here. before you release to the repository/your users, go over the WHOLE test-documentation and test, test test... this enshures high quality software and happy users in a solid working, reliable world.

==== index.php ====

this should check if a database exists, if not create a new default one from *.sql template.

o run it when config/config.php -> $settings_database_name exists
... should not create a new one, but use the existing one and redirect to login_frontend.php
o run it when config/config.php -> $settings_database_name not exists
... should create a new empty database and alerting that to the user, when finished redirect to login_frontend.php and use the just created database

==== frontend_login.php ====

this is used to verify if a user is allowed to login.

o type in an non-existing username and a random password
-> you should see a orange-warning-message: error credentials wrong...

o type in an existing username and a random password
-> you should see a green "everything-ok" message that you are now logged in and about to be redirected to the user's home or to the or system default's home if user has not set a home.

o click on button password forgotten?
oo -> frontend_forgottenPassword.php -> enter e-mail and captcha -> if the user exists, user becomes a new randomly generated password send via email also noticing: that unencrypted email is not a super-save way of sending passwords and that user should change the password after login.
(maybe even display warning message once: you have logged in with an auto-generated password - please change your password!) 

o 1. login with not existing username
-> after few seconds (while still in the input field)
-> message needs to appear telling "username already taken"

o 2. login with non-existing username / password
-> message needs to appear telling "username or password wrong."

o 3. login with existing username, wrong password
-> message "username or password wrong."

o 4. login with existing username, and correct password
-> message "login successfull... you are logged in."
... creating session coo ie.
... then redirecting to content.php
... content.php must check session cookie.

==== UserManagement_frontend.php ====

this is used to manage users (add, change, delete, asign new groups, remove from groups) and so on.

concept:
o 1.1. login as an non-admin user, go to usermanagement -> you should only see your own user
o 1.2. login as an admin user, go to usermanagement -> you should see all users

o 2. register without username -> should refuse registration

o 3. register without password -> should refuse registration

o 4. register without password confirmation -> should refuse registration

o 5.1. password confirmation does not match password -> should refuse registration
o 6. register without email -> should refuse registration

o 7. register without firstname -> could be optional, but should refuse registration

o 8. register without secondname -> could be optional, should refuse registration

o 9. register same username twice -> refuse registration, display message "username is already registered"
-> check via phpmyadmin that there are no records created in auth-table in database

o 10. register with unique username
-> hit enter (in any field)
-> registration successfull
-> if user is a guest (not logged in) display message & redirect to index.html -> which redirects to login
-> if user is a admin (logged in) display message & go one page back

o  11. register when table passwd not exists
-> error message "database exists, but auth table is missing" or other meaningful message that can lead an administrator to the cause of the problem. 

12. delete:
o 12.1. click on delete (without selecting any users)
-> message should appear "no user was selected"
o 12.2. select the smal checkbox next to user profile picture, click on delete
-> popup should appear: showing selected user's profile pictures and names "do you really want to delete?"
o 12.3. click delete
-> should return to usermanagement screen, updating user list.

13. edit:
o 13.1. click on user to edit

not implemented yet:

o 14. select profile picture, click on upload
-> should display smal version of profile picture (height: 115px; width: 115px;)

==== general security checks ====

o it should not be possible to pass a specificly crafted url to any any php script to
1. view a user's password
2. view settings of the system
3. update/change user passwords or details 

s.h. "fritzbox hacken"
http://www.mengelke.de/Blog/GossipBox
http://www.youtube.com/watch?v=85sCpNJkQtw
